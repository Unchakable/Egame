package controllers;
import java.util.ArrayList;
import java.util.List;

import model.Achievements;
import model.Questions;

public class MainController {
    public static List<Questions> getQuestions() {
        Questions questions;
        List<Questions> questionsList = new ArrayList<>();
        String question = "В одной из кодировок Unicode каждый символ кодируется 16 битами. Ученик хотел написать текст (в нём нет лишних пробелов): «Скользя по утреннему снегу, друг милый, предадимся бегу нетерпеливого коня и навестим поля пустые…». Одно из слов ученик написал два раза подряд, поставив между одинаковыми словами один пробел. При этом размер написанного предложения в данной кодировке оказался на 14 байт больше, чем размер нужного предложения. Напишите в ответе лишнее слово.";
        String decision = "16 бит = 2 байта на символ, 14 / 2 = 7 символов лишних написал ученик, 7 - 1 = 6 символов содержит слово без пробела.";
        String rightAnswer = "пустые";
        String wrongAnswer1 = "коня";
        String wrongAnswer2 =  "друг";
        String wrongAnswer3 =  "снегу";
        boolean inUsed = false;
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "В кодировке Windows-1251 каждый символ кодируется 8 битами. Вова написал текст (в нём нет лишних пробелов): «Мой дядя самых честных правил, когда не в шутку занемог…». Ученик вычеркнул из текста одно слово. Заодно он вычеркнул ставший лишним пробел – два пробела не должны идти подряд.змер нового предложения в данной кодировке оказался на 5 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое слово.";
        decision = "8 бит = 1 байт занимает 1 символ 5 байт занимают 5 символов с учетом пробела, без пробела 4 символа.";
        rightAnswer = "дядя";
        wrongAnswer1 = "шутку";
        wrongAnswer2 =  "мой";
        wrongAnswer3 =  "самых";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "В одной из кодировок Unicode каждый символ кодируется 16 битами. Вова написал текст (в нём нет лишних пробелов): «Личи, гуава, дуриан, кумкват, тамаринд, мангустин, джаботикаба – экзотические фрукты». Ученик вычеркнул из списка название одного фрукта. Заодно он вычеркнул ставшие лишними запятую и пробел – два пробела не должны идти подряд. При этом размер нового предложения в данной кодировке оказался на 12 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название экзотического фрукта.";
        decision = "16 бит = 2 байт занимает 1 символ 12 байт занимают 12/2=6 символов, с учетом пробела и запятой 4 символа.";
        rightAnswer = "личи";
        wrongAnswer1 = "кумкват";
        wrongAnswer2 =  "мангустин";
        wrongAnswer3 =  "гуава";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "В кодировке КОИ-8 каждый символ кодируется 8 битами. Вова написал текст (в нём нет лишних пробелов): «Лук, репа, горох, свёкла, морковь, кукуруза, картофель, топинамбур – овощи». Ученик вычеркнул из списка название одного овоща. Заодно он вычеркнул ставшие лишними запятую и пробел – два пробела не должны идти подряд. При этом размер нового предложения в данной кодировке оказался на 7 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название овоща.";
        decision = "8 бит = 1 байт занимает 1 символ 7 байт занимают 7 символов, с учетом пробела и запятой 5 символов.";
        rightAnswer = "горох";
        wrongAnswer1 = "морковь";
        wrongAnswer2 =  "топинамбур";
        wrongAnswer3 =  "лук";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "В кодировке Windows-1251 каждый символ кодируется 8 битами. Вова написал текст (в нём нет лишних пробелов): «Вздыхать и думать про себя: Когда же чёрт возьмёт тебя!». Ученик вычеркнул из текста одно слово. Заодно он вычеркнул ставший лишним пробел – два пробела не должны идти подряд. При этом размер нового предложения в данной кодировке оказался на 7 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое слово.";
        decision = "8 бит = 1 байт занимает 1 символ 7 байт занимают 7 символов, с учетом пробела 6 символов.";
        rightAnswer = "думать";
        wrongAnswer1 = "вздыхать";
        wrongAnswer2 =  "когда";
        wrongAnswer3 =  "тебя";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "Напишите натуральное число x, для которого ложно высказывание: НЕ (x < 8) ИЛИ (x < 7).";
        decision = "Сначала избавимся от НЕ и запишем выражение в виде (х >= 8) ИЛИ (х < 7). Оно ложно. Логическое ИЛИ ложно только тогда, когда ложны оба высказывания. То есть нам надо найти натуральное число не больше и не равное 8 (значит < 8) И не меньше 7 (значит >= 7). Переделаем ложное высказывание в истинное, применяя закон де Моргана: (х < 8) И (х >= 7) - истинно. Проверяем: 7 >= 8 ? НЕТ, ложно 7 < 7 ? НЕТ, ложно. Оба высказывания ложны, значит мы нашли верный ответ.";
        rightAnswer = "7";
        wrongAnswer1 = "8";
        wrongAnswer2 =  "6";
        wrongAnswer3 =  "9";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "Напишите наибольшее трёхзначное число x, для которого истинно высказывание: НЕ (Первая цифра чётная) И (x делится на 3).";
        decision = "Избавимся от НЕ (Первая цифра нечётная) И (x делится на 3) - истинно. Наибольшая нечетная цифра - 9. Наибольшее трехзначное число, начинающееся с девятки 999 - делится на 3.";
        rightAnswer = "999";
        wrongAnswer1 = "666";
        wrongAnswer2 =  "789";
        wrongAnswer3 =  "989";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "Напишите наибольшее трёхзначное число x, для которого истинно высказывание: (Первая цифра нечётная) И НЕ (x делится на 3).";
        decision = "Избавимся от НЕ: (Первая цифра нечётная) И (x не делится на 3) - истинно. Наибольшая нечетная цифра 9, наибольшее трехзначное число на девятку - 999, но оно делится на 3. Проверим 998 - не делится нацело на 3, значит второе условие выполняется.";
        rightAnswer = "998";
        wrongAnswer1 = "696";
        wrongAnswer2 =  "888";
        wrongAnswer3 =  "678";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "Доступ к файлу klara.htm, находящемуся на сервере march.ru, осуществляется по протоколу http. Фрагменты адреса файла закодированы цифрами от 1 до 7. Запишите последовательность этих цифр, кодирующую адрес указанного файла в сети Интернет: 1) klara; 2) /; 3) march; 4) .htm; 5) .ru; 6) ://; 7) http.";
        decision = "http://march.ru/klara.htm";
        rightAnswer = "7635214";
        wrongAnswer1 = "7635124";
        wrongAnswer2 =  "7632514";
        wrongAnswer3 =  "7365214";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        question = "Доступ к файлу htm.net, находящемуся на сервере com.edu, осуществляется по протоколу ftp. Фрагменты адреса файла закодированы цифрами от 1 до 7. Запишите последовательность этих цифр, кодирующую адрес указанного файла в сети Интернет. 1) /; 2) com; 3) .edu; 4) ://; 5) .net; 6) htm; 7) ftp.";
        decision = "ftp://com.edu/htm.net";
        rightAnswer = "7423165";
        wrongAnswer1 = "7243165";
        wrongAnswer2 =  "7423156";
        wrongAnswer3 =  "7421365";
        questions = new Questions(question, decision, rightAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, inUsed);
        questionsList.add(questions);
        return questionsList;
    }

    public static List<Achievements> getAchievements(){
        Achievements achievements;
        List<Achievements> achievementsList = new ArrayList<>();
        boolean isUnlocked = false;
        achievements = new Achievements("РАБОТЯГА", isUnlocked);
        achievementsList.add(achievements);
        achievements = new Achievements("САПЕРОМ БУДЕШЬ", isUnlocked);
        achievementsList.add(achievements);
        achievements = new Achievements("КРЕМЕНЬ!", isUnlocked);
        achievementsList.add(achievements);
        achievements = new Achievements("ЛАС-ВЕГАС", isUnlocked);
        achievementsList.add(achievements);
        achievements = new Achievements("ПРОСТО СДАЙ ЕГЭ", isUnlocked);
        achievementsList.add(achievements);
        return achievementsList;
    }
}
